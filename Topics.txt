day1:"basic 2:1 mux"
day2:"logical gates"
day3:"datatyes"(two types of datatypes *net type *re datatype)
day4:"verilog operators"
day5:"modules and ports"(implements by 4_1 mux)
day6:"gate modeling"(by using logical gates)
day7:"dataflow modeling" (using assign statement implement by gray to binary code by xor)
day8:"behviour modeling "(using always block implemented by counter(8bit))
day9:"traffic light"(it works based fsm(states) default state is red )
day10:"digital clock"(the clock upto 15 then resets to 0)
day11:"jk-flipflop(edge)"(overcome the condition of j=1 k=1 it toggles the previous output q )
day12:"sr-latch(level)"(set-when s=1 reset when r=1 depends on (s,r) not the clk(while flipflops depends on clk (edge)))
day13:"up-counter"(by counting (increasing the count by 1 count+=1 initialising count=0000 by reset))
day14:"down-counter"(by counting(decresing by 1 count-=1 initialising count=1111 by reset))
day15:"shift register"(shifts by right or left )
day16:"carry-look-ahead-adder"(overcome the problem of propagation delay in ripple carry adder by generate and propagation signal g=a&b p=a^b )
day17:"4-bitadder-subtractor"(based on the crtl signal if crtl?add:sub(2's complement will be done by xor operation))
day18:"comparator"(compare two inputs and produce the ouput (a>b)(a<b)(a==b))
day19:"Demux 1:4"(1 inputs 4 output base selection line sel[1:0] (2 bits))
day20:"gray to binary code" 
day21:"ripple_carry_adder"(output of the 1st will be the cin of the next inputs)
day22:"full adder"
day23:"full subtractor"
day24:"binary encoder"2^n input n output "(difference between encoder and  mux is there will be selection line here there is not like that. )
day25:"priority encoder"(to overcome the drwback of binary encoder where in encoder the o/p is invalid when 2 i/p is set as high here it will prioritize that which is to be)
day26:"decoder"(n input 2^n output)
day27:"universal shift register"(it can be used as pipo,sipo,siso,piso)
day28:"LFSR"(it takes any of the 2 binary bits and done xor operation sequentially as per our requirements)
day29:"MULTIPLIER"(it gives partial multiplied value
)
day30:"clock_divider"
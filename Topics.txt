day1:"basic 2:1 mux"
day2:"logical gates"
day3:"datatyes"(two types of datatypes *net type *re datatype)
day4:"verilog operators"
day5:"modules and ports"(implements by 4_1 mux)
day6:"gate modeling"(by using logical gates(structural modeling))
day7:"dataflow modeling" (using assign statement implement by gray to binary code by xor)
day8:"behviour modeling "(using always block implemented by counter(8bit))
day9:"traffic light"(it works based fsm(states) default state is red )
day10:"digital clock"(the clock upto 15 then resets to 0)
day11:"jk-flipflop(edge)"(overcome the condition of j=1 k=1 it toggles the previous output q )
day12:"sr-latch(level)"(set-when s=1 reset when r=1 depends on (s,r) not the clk(while flipflops depends on clk (edge)))
day13:"up-counter"(by counting (increasing the count by 1 count+=1 initialising count=0000 by reset))
day14:"down-counter"(by counting(decresing by 1 count-=1 initialising count=1111 by reset))
day15:"shift register"(shifts by right or left )
day16:"carry-look-ahead-adder"(overcome the problem of propagation delay in ripple carry adder by generate and propagation signal g=a&b p=a^b )
day17:"4-bitadder-subtractor"(based on the crtl signal if crtl?add:sub(2's complement will be done by xor operation))
day18:"comparator"(compare two inputs and produce the ouput (a>b)(a<b)(a==b))
day19:"Demux 1:4"(1 inputs 4 output base selection line sel[1:0] (2 bits))
day20:"gray to binary code" 
day21:"ripple_carry_adder"(output of the 1st will be the cin of the next inputs)
day22:"full adder"
day23:"full subtractor"
day24:"binary encoder"2^n input n output "(difference between encoder and  mux is there will be selection line here there is not like that. )
day25:"priority encoder"(to overcome the drwback of binary encoder where in encoder the o/p is invalid when 2 i/p is set as high here it will prioritize that which is to be)
day26:"decoder"(n input 2^n output)
day27:"universal shift register"(it can be used as pipo,sipo,siso,piso)
day28:"LFSR"(it takes any of the 2 binary bits and done xor operation sequentially as per our requirements)
day29:"MULTIPLIER"(it gives partial multiplied value
)
day30:"clock_divider"
day31:"carry select adder"(this adder is used to spped up the addition process and multiple cin will performed in parallel form)
day32:"binary to one hot encoder"(this type of encoder sets only one bt has high)
day33:"n_bit_comparator"(it compares n bit data )
day34:"barrel_shifter"(that shift dataword for a specific no of bits)
day35:"d_latch using 2:1 mux"
day36:"universal binary counter" (it up count,down count and load specific values based on the control input)
day37:"parallel in parallel out sift register"(it shifts parallely)
day 38:"Parallel in seriel out"(it takes parallel input and produce serial output)
day39:"serial in parallel out"(it takes serial input and produces parallel output)
day40:"serial in serial out"(it takes serial input and produce serial output)
day41:"ring counter"(this counter is like a shift register typically the output of last ff will be fed to the input of 1st ff)
day42:"majority detector"(it outputs 1 if the majority of the inputs are 1. it is used to voting system,decision making process)
day43:"minority detector"(the outputs are 1 when the minority of the inputs are 1)
day44:"Johnson Counter"(the complement output of the last flipflop is given as a input to the new flipflop (it is also called Twisted ring counter))
day45:"serial adder"(it adds bit by bit of two binary numbers processing 1 bit at a time)
day46:"SEQUENCE GENERATOR"(it generate a sequence)
day47:"clock buffer"(it distributes clock signal to diffrent parts of digitalsystem)
day48:"simple register"(it is used to store and transfer the data)
day49:"7 segment display"(it is generally used to display decimal digits in digital systems )
day50:"array multiplier"(it is used to multiply two binary numbers)
day51:"booth multiplier"(Booth's algorithm can handle both positive and negative numbers efficiently.)
day52:"wallace_tree_multipler"(it is also used for multiplying two binary number and it is very efficient than other )
day53:"restoring division algorithm"(it is used to divide two binary numbers and  It involves a sequence of shift and subtract operations to compute the quotient and remainder)
day54:"GCD"(determining GCD using behaviour model and euclid's algorithm)
day55:"single port ram "(it is used to write a data in a required address in a ram and read a data in a required address)
